import grails.util.Environment

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.2"
    }
}

version "0.1"
group "gc"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile 'org.grails.plugins:mail:2.0.0.RC6'
    compile project(':dataframe')
    compile('com.amazonaws:aws-java-sdk-s3:1.11.378') {
        /*exclude group: 'com.fasterxml.jackson.core'
        excludes "jackson-databind"*/
    }
    compile 'org.grails.plugins:spring-security-core:3.2.0'
//    compile "org.grails.plugins:spring-security-rest:2.0.0.M2"
//    compile 'org.grails.plugins:spring-security-rest:2.0.0.RC1'
    compile 'org.grails.plugins:spring-security-ui:3.1.1'
    compile 'org.grails.plugins:spring-security-oauth2:1.1.0'
    compile 'org.grails.plugins:spring-security-oauth2-google:1.1.0'
    compile 'org.grails.plugins:spring-security-oauth2-facebook:1.0.0'
//    compile 'org.grails.plugins:spring-security-core:3.2.0.M1'
//    compile 'org.grails.plugins:spring-security-ui:3.0.0.M2'
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime 'mysql:mysql-connector-java:5.1.10'
//    runtime 'mysql:mysql-connector-java:5.1.37'
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"


    provided "org.springframework.boot:spring-boot-starter-tomcat"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    compile 'org.grails.plugins:quartz:2.0.12'

    
    testCompile "org.grails:grails-test-mixins:3.3.0.RC1"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    final Boolean reloadEnabled =
            Boolean.valueOf(System.properties[Environment.RELOAD_ENABLED])

    if (reloadEnabled) {
        systemProperty Environment.RELOAD_ENABLED, reloadEnabled
    }
}


assets {
    minifyJs = false
    minifyCss = true
    enableSourceMaps = true
    minifyOptions = [
            languageMode: 'ES5',
            targetLanguage: 'ES5',
            optimizationLevel: 'SIMPLE',
            ]
}
